namespace: "$NAMESPACE"
app: app-2048
env: "$ENV"

image:
  repository: "alexwhen/docker-2048"
  tag: "latest"
  pullPolicy: Always

deployments:
  - app: app-2048
    labels:
      app: app-2048
      app.kubernetes.io/name: app-2048
      app.kubernetes.io/instance: app-2048
    replicaCount: 1
    configMapData: false
    secretData: false
    containers:
      - name: app-2048
        ports:
          - name: app-port
            containerPort: 80
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: app-port
        readinessProbe:
          httpGet:
            path: /
            port: app-port
        resources:
          requests:
            cpu: 100m
            memory: 1024Mi
          limits:
            cpu: 2000m
            memory: 2048Mi

services:
  - name: app-2048
    labels:
      app.kubernetes.io/name: app-2048 
      app.kubernetes.io/instance: app-2048
    type: NodePort
    app: app-2048
    ports:
    - app: app-2048
      port: 80

ingresses_labels: 
  app.kubernetes.io/name: app-2048
  app.kubernetes.io/instance: app-2048
ingress_annotations:
  alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": {"Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
  alb.ingress.kubernetes.io/certificate-arn: $INGRESS_CERTIFICATE_ARN
  alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
  alb.ingress.kubernetes.io/scheme: internet-facing
  alb.ingress.kubernetes.io/security-groups: $INGRESS_SG
  kubernetes.io/ingress.class: alb

ingresses:
  - app: app-2048
    enabled: true
    annotations:
      external-dns.alpha.kubernetes.io/hostname: $INGRESS_HOST_ELB
    rules:
      - host: $INGRESS_HOST_ELB
        paths:
          - path: /*
            port: 80
            service: app-2048

